# Force the compiler
SET(CMAKE_C_COMPILER_WORKS TRUE CACHE INTERNAL "")
SET(CMAKE_CXX_COMPILER_WORKS TRUE CACHE INTERNAL "")
SET(CMAKE_C_COMPILER_FORCED TRUE CACHE INTERNAL "")
SET(CMAKE_CXX_COMPILER_FORCED TRUE CACHE INTERNAL "")
SET(CMAKE_C_COMPILER_ID_RUN TRUE CACHE INTERNAL "")
SET(CMAKE_CXX_COMPILER_ID_RUN TRUE CACHE INTERNAL "")

set(CMAKE_CXX_COMPILER_ID "GHS")
set(CMAKE_CXX_COMPILER_VERSION "")
set(CMAKE_CXX_COMPILER_WRAPPER "")
set(CMAKE_CXX_COMPILE_FEATURES "cxx_std_14")

set(CMAKE_SYSTEM_NAME               Generic)
set(CMAKE_SYSTEM_PROCESSOR          ppc)

# Without that flag CMake is not able to pass test compilation check
#set(CMAKE_TRY_COMPILE_TARGET_TYPE   STATIC_LIBRARY)

set(CMAKE_AR cxppc CACHE FILEPATH "" )
set(CMAKE_C_COMPILER ccppc CACHE FILEPATH "")
set(CMAKE_CXX_COMPILER cxppc CACHE FILEPATH "")

unset(CMAKE_C_FLAGS CACHE)

set(CMAKE_CXX_FLAGS "-language=cxx --stdl --no_exceptions --new_style_casts --c++14 --diag_suppress=111" CACHE STRING "" FORCE)
set(CMAKE_C_FLAGS_DEBUG             "-Omaxdebug -dwarf2" CACHE STRING "" FORCE)
set(CMAKE_C_FLAGS_RELEASE           "-Ospeed -dwarf2 -DNDEBUG" CACHE STRING "" FORCE)
set(CMAKE_CXX_FLAGS_DEBUG           "${CMAKE_C_FLAGS_DEBUG}" CACHE STRING "" FORCE)
set(CMAKE_CXX_FLAGS_RELEASE         "${CMAKE_C_FLAGS_RELEASE}" CACHE STRING "" FORCE)

set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

set(CMAKE_C_COMPILE_OBJECT "<CMAKE_C_COMPILER>  <DEFINES> <INCLUDES> <FLAGS> -o <OBJECT> -c <SOURCE>")
set(CMAKE_C_CREATE_STATIC_LIBRARY "<CMAKE_AR> -archive <LINK_FLAGS> <OBJECTS> -o <TARGET> ")
set(CMAKE_CXX_CREATE_STATIC_LIBRARY "<CMAKE_AR> -archive <LINK_FLAGS> <OBJECTS> -o <TARGET> ")
set(CMAKE_CXX_LINK_EXECUTABLE "<CMAKE_CXX_COMPILER> <FLAGS> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>")